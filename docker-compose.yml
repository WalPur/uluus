version: "3.3"
   
services:
  postgres:
    image: postgres:12
    env_file:
      - './infrastucture/services/postgres/.env'
  django:
    build: ./backend
    command: "gunicorn backend.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app/api
      - static_volume:/static
      - media_volume:/media
    env_file:
      - './infrastucture/services/postgres/.env'
      - './infrastucture/apps/backend/.env'
    expose:
      - 8000   
    depends_on:
      - postgres
  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./nginx/dockerfile
    volumes:
      - static_volume:/static
      - media_volume:/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on: 
      - django
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  # frontend:
  #   build: ./frontend
  #   command: "npm run start"
  #   volumes:
  #     - ./frontend:/app/frontend
  #     - node-modules:/app/frontend/node_modules
  #   ports:
  #     - "3000:3000"

volumes:
  node-modules:
  static_volume:
  media_volume: